import{_ as d,r as i,o as r,c as p,e as c,a as e,b as a,d as n,w as o,f as s}from"./app-EyRYa1P5.js";const h={},u=s(`<h2 id="图标支持" tabindex="-1"><a class="header-anchor" href="#图标支持"><span>图标支持</span></a></h2><p>你可以在页面的 frontmatter 中配置 <code>icon</code> 字段，填入对应图标的 FontClass 即可绑定图标到页面。</p><p>该图标会在导航栏，侧边栏，路径导航和标题中使用。</p><details class="hint-container details"><summary>例子</summary><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">icon</span><span class="token punctuation">:</span> home</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,4),m={class:"hint-container info"},k=e("p",{class:"hint-container-title"},"相关信息",-1),v=s('<h2 id="路径导航" tabindex="-1"><a class="header-anchor" href="#路径导航"><span>路径导航</span></a></h2><p>详见 <a href="">路径导航</a> 章节。</p><h2 id="文章信息展示" tabindex="-1"><a class="header-anchor" href="#文章信息展示"><span>文章信息展示</span></a></h2><p>详见 <a href="">文章信息</a> 章节。</p><h2 id="标题列表" tabindex="-1"><a class="header-anchor" href="#标题列表"><span>标题列表</span></a></h2><p>在桌面模式下，文章的标题列表会自动显示在屏幕的右侧。(在移动视图下它们会放置在侧边栏里)</p><p>如果你不希望在桌面模式下显示右侧的标题列表，请在主题选项中设置 <code>toc: false</code>。</p><p>你也可以在特定页面的 frontmatter 中通过 <code>toc</code> 来指定它。</p><h3 id="设置标题深度" tabindex="-1"><a class="header-anchor" href="#设置标题深度"><span>设置标题深度</span></a></h3><p>你可以通过在主题选项和页面 frontmatter 中设置 headerDepth 来自定义标题列表的深度。</p>',10),f={class:"hint-container note"},g=e("p",{class:"hint-container-title"},"注",-1),_={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},b={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,"[2, 3]",-1),x=e("code",null,"headerDepth",-1),w=e("code",null,"2",-1),C=e("h3",{id:"贡献者与最后更新时间",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#贡献者与最后更新时间"},[e("span",null,"贡献者与最后更新时间")])],-1),D=e("h4",{id:"上-下一篇链接",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#上-下一篇链接"},[e("span",null,"上 / 下一篇链接")])],-1),q=s(`<p>上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。你也可以通过主题选项或 frontmatter 来明确地重写或者禁用它:</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">prev</span><span class="token punctuation">:</span> ./some<span class="token punctuation">-</span>other<span class="token punctuation">-</span>page
<span class="token key atrule">next</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="评论" tabindex="-1"><a class="header-anchor" href="#评论"><span>评论</span></a></h2>`,3),z=s(`<h2 id="自定义布局" tabindex="-1"><a class="header-anchor" href="#自定义布局"><span>自定义布局</span></a></h2><p>默认情况下，每个 <code>*.md</code> 文件将会被渲染在一个 <code>&lt;div class=&quot;page&quot;&gt;</code> 容器中，同时还有侧边栏、自动生成的编辑链接，以及上 / 下一篇文章的链接。如果你想要使用一个完全自定义的组件来代替当前的页面，你可以通过 frontmatter 来指定布局组件。</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> SpecialLayout</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染 VuePress 中注册的 SpecialLayout 布局。</p>`,4),L={class:"hint-container note"},S=s('<p class="hint-container-title">注</p><p>主题只提供了 <code>Layout</code>，<code>404</code> 布局。</p><p>同时主题:</p><ul><li>在博客功能启用时提供 <code>Blog</code> 布局</li><li>在幻灯片功能启用时提供 <code>Slide</code> 布局</li></ul>',4),j={href:"https://vuejs.press/zh/advanced/cookbook/usage-of-client-config.html#layouts",target:"_blank",rel:"noopener noreferrer"},T=s(`<h2 id="自定义容器-class" tabindex="-1"><a class="header-anchor" href="#自定义容器-class"><span>自定义容器 Class</span></a></h2><p>默认情况下，每个页面都会渲染在 class 为 <code>theme-container</code> 的 <code>div</code> 中。如果你需要对特定页面应用一些特殊样式，你可以通过在 frontmatter 中设置 <code>containerClass</code> 来额外指定一个类名</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">containerClass</span><span class="token punctuation">:</span> fancy<span class="token punctuation">-</span>container</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染在 <code>&lt;div class=&quot;theme-container fancy-container&quot; /&gt;</code> 中。</p><h2 id="路径导航-1" tabindex="-1"><a class="header-anchor" href="#路径导航-1"><span>路径导航</span></a></h2><p>详见 <a href="">路径导航</a> 章节。</p><h2 id="文章信息展示-1" tabindex="-1"><a class="header-anchor" href="#文章信息展示-1"><span>文章信息展示</span></a></h2><p>详见 <a href="">文章信息</a> 章节。</p><h2 id="标题列表-1" tabindex="-1"><a class="header-anchor" href="#标题列表-1"><span>标题列表</span></a></h2><p>在桌面模式下，文章的标题列表会自动显示在屏幕的右侧。(在移动视图下它们会放置在侧边栏里)</p><p>如果你不希望在桌面模式下显示右侧的标题列表，请在主题选项中设置 <code>toc: false</code>。</p><p>你也可以在特定页面的 frontmatter 中通过 <code>toc</code> 来指定它。</p><h3 id="设置标题深度-1" tabindex="-1"><a class="header-anchor" href="#设置标题深度-1"><span>设置标题深度</span></a></h3><p>你可以通过在主题选项和页面 frontmatter 中设置 headerDepth 来自定义标题列表的深度。</p>`,14),O={class:"hint-container note"},P=e("p",{class:"hint-container-title"},"注",-1),V={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},B={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},N=e("code",null,"[2, 3]",-1),I=e("code",null,"headerDepth",-1),H=e("code",null,"2",-1),E=e("h3",{id:"贡献者与最后更新时间-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#贡献者与最后更新时间-1"},[e("span",null,"贡献者与最后更新时间")])],-1),F=e("h4",{id:"上-下一篇链接-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#上-下一篇链接-1"},[e("span",null,"上 / 下一篇链接")])],-1),R=s(`<p>上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。你也可以通过主题选项或 frontmatter 来明确地重写或者禁用它:</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">prev</span><span class="token punctuation">:</span> ./some<span class="token punctuation">-</span>other<span class="token punctuation">-</span>page
<span class="token key atrule">next</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="评论-1" tabindex="-1"><a class="header-anchor" href="#评论-1"><span>评论</span></a></h2>`,3),Z=s(`<h2 id="自定义布局-1" tabindex="-1"><a class="header-anchor" href="#自定义布局-1"><span>自定义布局</span></a></h2><p>默认情况下，每个 <code>*.md</code> 文件将会被渲染在一个 <code>&lt;div class=&quot;page&quot;&gt;</code> 容器中，同时还有侧边栏、自动生成的编辑链接，以及上 / 下一篇文章的链接。如果你想要使用一个完全自定义的组件来代替当前的页面，你可以通过 frontmatter 来指定布局组件。</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> SpecialLayout</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染 VuePress 中注册的 SpecialLayout 布局。</p>`,4),A={class:"hint-container note"},J=s('<p class="hint-container-title">注</p><p>主题只提供了 <code>Layout</code>，<code>404</code> 布局。</p><p>同时主题:</p><ul><li>在博客功能启用时提供 <code>Blog</code> 布局</li><li>在幻灯片功能启用时提供 <code>Slide</code> 布局</li></ul>',4),M={href:"https://vuejs.press/zh/advanced/cookbook/usage-of-client-config.html#layouts",target:"_blank",rel:"noopener noreferrer"},G=s(`<h2 id="自定义容器-class-1" tabindex="-1"><a class="header-anchor" href="#自定义容器-class-1"><span>自定义容器 Class</span></a></h2><p>默认情况下，每个页面都会渲染在 class 为 <code>theme-container</code> 的 <code>div</code> 中。如果你需要对特定页面应用一些特殊样式，你可以通过在 frontmatter 中设置 <code>containerClass</code> 来额外指定一个类名</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">containerClass</span><span class="token punctuation">:</span> fancy<span class="token punctuation">-</span>container</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染在 <code>&lt;div class=&quot;theme-container fancy-container&quot; /&gt;</code> 中。</p><h2 id="路径导航-2" tabindex="-1"><a class="header-anchor" href="#路径导航-2"><span>路径导航</span></a></h2><p>详见 <a href="">路径导航</a> 章节。</p><h2 id="文章信息展示-2" tabindex="-1"><a class="header-anchor" href="#文章信息展示-2"><span>文章信息展示</span></a></h2><p>详见 <a href="">文章信息</a> 章节。</p><h2 id="标题列表-2" tabindex="-1"><a class="header-anchor" href="#标题列表-2"><span>标题列表</span></a></h2><p>在桌面模式下，文章的标题列表会自动显示在屏幕的右侧。(在移动视图下它们会放置在侧边栏里)</p><p>如果你不希望在桌面模式下显示右侧的标题列表，请在主题选项中设置 <code>toc: false</code>。</p><p>你也可以在特定页面的 frontmatter 中通过 <code>toc</code> 来指定它。</p><h3 id="设置标题深度-2" tabindex="-1"><a class="header-anchor" href="#设置标题深度-2"><span>设置标题深度</span></a></h3><p>你可以通过在主题选项和页面 frontmatter 中设置 headerDepth 来自定义标题列表的深度。</p>`,14),K={class:"hint-container note"},Q=e("p",{class:"hint-container-title"},"注",-1),U={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},W={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},X=e("code",null,"[2, 3]",-1),Y=e("code",null,"headerDepth",-1),$=e("code",null,"2",-1),ee=e("h3",{id:"贡献者与最后更新时间-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#贡献者与最后更新时间-2"},[e("span",null,"贡献者与最后更新时间")])],-1),ae=e("h4",{id:"上-下一篇链接-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#上-下一篇链接-2"},[e("span",null,"上 / 下一篇链接")])],-1),ne=s(`<p>上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。你也可以通过主题选项或 frontmatter 来明确地重写或者禁用它:</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">prev</span><span class="token punctuation">:</span> ./some<span class="token punctuation">-</span>other<span class="token punctuation">-</span>page
<span class="token key atrule">next</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="评论-2" tabindex="-1"><a class="header-anchor" href="#评论-2"><span>评论</span></a></h2>`,3),se=s(`<h2 id="自定义布局-2" tabindex="-1"><a class="header-anchor" href="#自定义布局-2"><span>自定义布局</span></a></h2><p>默认情况下，每个 <code>*.md</code> 文件将会被渲染在一个 <code>&lt;div class=&quot;page&quot;&gt;</code> 容器中，同时还有侧边栏、自动生成的编辑链接，以及上 / 下一篇文章的链接。如果你想要使用一个完全自定义的组件来代替当前的页面，你可以通过 frontmatter 来指定布局组件。</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> SpecialLayout</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染 VuePress 中注册的 SpecialLayout 布局。</p>`,4),te={class:"hint-container note"},le=s('<p class="hint-container-title">注</p><p>主题只提供了 <code>Layout</code>，<code>404</code> 布局。</p><p>同时主题:</p><ul><li>在博客功能启用时提供 <code>Blog</code> 布局</li><li>在幻灯片功能启用时提供 <code>Slide</code> 布局</li></ul>',4),oe={href:"https://vuejs.press/zh/advanced/cookbook/usage-of-client-config.html#layouts",target:"_blank",rel:"noopener noreferrer"},ce=s(`<h2 id="自定义容器-class-2" tabindex="-1"><a class="header-anchor" href="#自定义容器-class-2"><span>自定义容器 Class</span></a></h2><p>默认情况下，每个页面都会渲染在 class 为 <code>theme-container</code> 的 <code>div</code> 中。如果你需要对特定页面应用一些特殊样式，你可以通过在 frontmatter 中设置 <code>containerClass</code> 来额外指定一个类名</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">containerClass</span><span class="token punctuation">:</span> fancy<span class="token punctuation">-</span>container</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染在 <code>&lt;div class=&quot;theme-container fancy-container&quot; /&gt;</code> 中。</p><h2 id="路径导航-3" tabindex="-1"><a class="header-anchor" href="#路径导航-3"><span>路径导航</span></a></h2><p>详见 <a href="">路径导航</a> 章节。</p><h2 id="文章信息展示-3" tabindex="-1"><a class="header-anchor" href="#文章信息展示-3"><span>文章信息展示</span></a></h2><p>详见 <a href="">文章信息</a> 章节。</p><h2 id="标题列表-3" tabindex="-1"><a class="header-anchor" href="#标题列表-3"><span>标题列表</span></a></h2><p>在桌面模式下，文章的标题列表会自动显示在屏幕的右侧。(在移动视图下它们会放置在侧边栏里)</p><p>如果你不希望在桌面模式下显示右侧的标题列表，请在主题选项中设置 <code>toc: false</code>。</p><p>你也可以在特定页面的 frontmatter 中通过 <code>toc</code> 来指定它。</p><h3 id="设置标题深度-3" tabindex="-1"><a class="header-anchor" href="#设置标题深度-3"><span>设置标题深度</span></a></h3><p>你可以通过在主题选项和页面 frontmatter 中设置 headerDepth 来自定义标题列表的深度。</p>`,14),ie={class:"hint-container note"},de=e("p",{class:"hint-container-title"},"注",-1),re={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},he=e("code",null,"[2, 3]",-1),ue=e("code",null,"headerDepth",-1),me=e("code",null,"2",-1),ke=e("h3",{id:"贡献者与最后更新时间-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#贡献者与最后更新时间-3"},[e("span",null,"贡献者与最后更新时间")])],-1),ve=e("h4",{id:"上-下一篇链接-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#上-下一篇链接-3"},[e("span",null,"上 / 下一篇链接")])],-1),fe=s(`<p>上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。你也可以通过主题选项或 frontmatter 来明确地重写或者禁用它:</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">prev</span><span class="token punctuation">:</span> ./some<span class="token punctuation">-</span>other<span class="token punctuation">-</span>page
<span class="token key atrule">next</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="评论-3" tabindex="-1"><a class="header-anchor" href="#评论-3"><span>评论</span></a></h2>`,3),ge=s(`<h2 id="自定义布局-3" tabindex="-1"><a class="header-anchor" href="#自定义布局-3"><span>自定义布局</span></a></h2><p>默认情况下，每个 <code>*.md</code> 文件将会被渲染在一个 <code>&lt;div class=&quot;page&quot;&gt;</code> 容器中，同时还有侧边栏、自动生成的编辑链接，以及上 / 下一篇文章的链接。如果你想要使用一个完全自定义的组件来代替当前的页面，你可以通过 frontmatter 来指定布局组件。</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> SpecialLayout</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染 VuePress 中注册的 SpecialLayout 布局。</p>`,4),_e={class:"hint-container note"},be=s('<p class="hint-container-title">注</p><p>主题只提供了 <code>Layout</code>，<code>404</code> 布局。</p><p>同时主题:</p><ul><li>在博客功能启用时提供 <code>Blog</code> 布局</li><li>在幻灯片功能启用时提供 <code>Slide</code> 布局</li></ul>',4),ye={href:"https://vuejs.press/zh/advanced/cookbook/usage-of-client-config.html#layouts",target:"_blank",rel:"noopener noreferrer"},xe=s(`<h2 id="自定义容器-class-3" tabindex="-1"><a class="header-anchor" href="#自定义容器-class-3"><span>自定义容器 Class</span></a></h2><p>默认情况下，每个页面都会渲染在 class 为 <code>theme-container</code> 的 <code>div</code> 中。如果你需要对特定页面应用一些特殊样式，你可以通过在 frontmatter 中设置 <code>containerClass</code> 来额外指定一个类名</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">containerClass</span><span class="token punctuation">:</span> fancy<span class="token punctuation">-</span>container</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染在 <code>&lt;div class=&quot;theme-container fancy-container&quot; /&gt;</code> 中。</p><h2 id="路径导航-4" tabindex="-1"><a class="header-anchor" href="#路径导航-4"><span>路径导航</span></a></h2><p>详见 <a href="">路径导航</a> 章节。</p><h2 id="文章信息展示-4" tabindex="-1"><a class="header-anchor" href="#文章信息展示-4"><span>文章信息展示</span></a></h2><p>详见 <a href="">文章信息</a> 章节。</p><h2 id="标题列表-4" tabindex="-1"><a class="header-anchor" href="#标题列表-4"><span>标题列表</span></a></h2><p>在桌面模式下，文章的标题列表会自动显示在屏幕的右侧。(在移动视图下它们会放置在侧边栏里)</p><p>如果你不希望在桌面模式下显示右侧的标题列表，请在主题选项中设置 <code>toc: false</code>。</p><p>你也可以在特定页面的 frontmatter 中通过 <code>toc</code> 来指定它。</p><h3 id="设置标题深度-4" tabindex="-1"><a class="header-anchor" href="#设置标题深度-4"><span>设置标题深度</span></a></h3><p>你可以通过在主题选项和页面 frontmatter 中设置 headerDepth 来自定义标题列表的深度。</p>`,14),we={class:"hint-container note"},Ce=e("p",{class:"hint-container-title"},"注",-1),De={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://vuejs.press/zh/reference/config.html#markdown.headers",target:"_blank",rel:"noopener noreferrer"},ze=e("code",null,"[2, 3]",-1),Le=e("code",null,"headerDepth",-1),Se=e("code",null,"2",-1),je=e("h3",{id:"贡献者与最后更新时间-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#贡献者与最后更新时间-4"},[e("span",null,"贡献者与最后更新时间")])],-1),Te=e("h4",{id:"上-下一篇链接-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#上-下一篇链接-4"},[e("span",null,"上 / 下一篇链接")])],-1),Oe=s(`<p>上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。你也可以通过主题选项或 frontmatter 来明确地重写或者禁用它:</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">prev</span><span class="token punctuation">:</span> ./some<span class="token punctuation">-</span>other<span class="token punctuation">-</span>page
<span class="token key atrule">next</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="评论-4" tabindex="-1"><a class="header-anchor" href="#评论-4"><span>评论</span></a></h2>`,3),Pe=s(`<h2 id="自定义布局-4" tabindex="-1"><a class="header-anchor" href="#自定义布局-4"><span>自定义布局</span></a></h2><p>默认情况下，每个 <code>*.md</code> 文件将会被渲染在一个 <code>&lt;div class=&quot;page&quot;&gt;</code> 容器中，同时还有侧边栏、自动生成的编辑链接，以及上 / 下一篇文章的链接。如果你想要使用一个完全自定义的组件来代替当前的页面，你可以通过 frontmatter 来指定布局组件。</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> SpecialLayout</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染 VuePress 中注册的 SpecialLayout 布局。</p>`,4),Ve={class:"hint-container note"},Be=s('<p class="hint-container-title">注</p><p>主题只提供了 <code>Layout</code>，<code>404</code> 布局。</p><p>同时主题:</p><ul><li>在博客功能启用时提供 <code>Blog</code> 布局</li><li>在幻灯片功能启用时提供 <code>Slide</code> 布局</li></ul>',4),Ne={href:"https://vuejs.press/zh/advanced/cookbook/usage-of-client-config.html#layouts",target:"_blank",rel:"noopener noreferrer"},Ie=s(`<h2 id="自定义容器-class-4" tabindex="-1"><a class="header-anchor" href="#自定义容器-class-4"><span>自定义容器 Class</span></a></h2><p>默认情况下，每个页面都会渲染在 class 为 <code>theme-container</code> 的 <code>div</code> 中。如果你需要对特定页面应用一些特殊样式，你可以通过在 frontmatter 中设置 <code>containerClass</code> 来额外指定一个类名</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">containerClass</span><span class="token punctuation">:</span> fancy<span class="token punctuation">-</span>container</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将会为当前的页面渲染在 <code>&lt;div class=&quot;theme-container fancy-container&quot; /&gt;</code> 中。</p>`,4);function He(Ee,Fe){const l=i("RouteLink"),t=i("ExternalLinkIcon");return r(),p("div",null,[c(" more "),u,e("div",m,[k,e("p",null,[a("图标的相关设置，详见 "),n(l,{to:"/interface/icon.html"},{default:o(()=>[a("图标支持")]),_:1})])]),v,e("div",f,[g,e("p",null,[a("有效最大值取决于你通过 "),e("a",_,[a("markdown.headers.level"),n(t)]),a(" 提取了哪些级别的标题。")]),e("p",null,[a("由于 "),e("a",b,[a("markdown.headers.level"),n(t)]),a(" 的默认值是 "),y,a(" ，因此 "),x,a(" 的默认最大值是 "),w,a(" 。")])]),C,e("p",null,[a("详见 "),n(l,{to:"/feature/meta.html"},{default:o(()=>[a("页面元数据")]),_:1}),a(" 章节。")]),D,c(" TODO: Improve it "),q,e("p",null,[a("具体详情请见 "),n(l,{to:"/feature/comment.html"},{default:o(()=>[a("评论")]),_:1}),a(" 章节。")]),z,e("div",L,[S,e("p",null,[a("如果你想使用你自己的布局，你可以在 "),e("a",j,[a("客户端配置文件中注册布局"),n(t)]),a("。")])]),T,e("div",O,[P,e("p",null,[a("有效最大值取决于你通过 "),e("a",V,[a("markdown.headers.level"),n(t)]),a(" 提取了哪些级别的标题。")]),e("p",null,[a("由于 "),e("a",B,[a("markdown.headers.level"),n(t)]),a(" 的默认值是 "),N,a(" ，因此 "),I,a(" 的默认最大值是 "),H,a(" 。")])]),E,e("p",null,[a("详见 "),n(l,{to:"/feature/meta.html"},{default:o(()=>[a("页面元数据")]),_:1}),a(" 章节。")]),F,c(" TODO: Improve it "),R,e("p",null,[a("具体详情请见 "),n(l,{to:"/feature/comment.html"},{default:o(()=>[a("评论")]),_:1}),a(" 章节。")]),Z,e("div",A,[J,e("p",null,[a("如果你想使用你自己的布局，你可以在 "),e("a",M,[a("客户端配置文件中注册布局"),n(t)]),a("。")])]),G,e("div",K,[Q,e("p",null,[a("有效最大值取决于你通过 "),e("a",U,[a("markdown.headers.level"),n(t)]),a(" 提取了哪些级别的标题。")]),e("p",null,[a("由于 "),e("a",W,[a("markdown.headers.level"),n(t)]),a(" 的默认值是 "),X,a(" ，因此 "),Y,a(" 的默认最大值是 "),$,a(" 。")])]),ee,e("p",null,[a("详见 "),n(l,{to:"/feature/meta.html"},{default:o(()=>[a("页面元数据")]),_:1}),a(" 章节。")]),ae,c(" TODO: Improve it "),ne,e("p",null,[a("具体详情请见 "),n(l,{to:"/feature/comment.html"},{default:o(()=>[a("评论")]),_:1}),a(" 章节。")]),se,e("div",te,[le,e("p",null,[a("如果你想使用你自己的布局，你可以在 "),e("a",oe,[a("客户端配置文件中注册布局"),n(t)]),a("。")])]),ce,e("div",ie,[de,e("p",null,[a("有效最大值取决于你通过 "),e("a",re,[a("markdown.headers.level"),n(t)]),a(" 提取了哪些级别的标题。")]),e("p",null,[a("由于 "),e("a",pe,[a("markdown.headers.level"),n(t)]),a(" 的默认值是 "),he,a(" ，因此 "),ue,a(" 的默认最大值是 "),me,a(" 。")])]),ke,e("p",null,[a("详见 "),n(l,{to:"/feature/meta.html"},{default:o(()=>[a("页面元数据")]),_:1}),a(" 章节。")]),ve,c(" TODO: Improve it "),fe,e("p",null,[a("具体详情请见 "),n(l,{to:"/feature/comment.html"},{default:o(()=>[a("评论")]),_:1}),a(" 章节。")]),ge,e("div",_e,[be,e("p",null,[a("如果你想使用你自己的布局，你可以在 "),e("a",ye,[a("客户端配置文件中注册布局"),n(t)]),a("。")])]),xe,e("div",we,[Ce,e("p",null,[a("有效最大值取决于你通过 "),e("a",De,[a("markdown.headers.level"),n(t)]),a(" 提取了哪些级别的标题。")]),e("p",null,[a("由于 "),e("a",qe,[a("markdown.headers.level"),n(t)]),a(" 的默认值是 "),ze,a(" ，因此 "),Le,a(" 的默认最大值是 "),Se,a(" 。")])]),je,e("p",null,[a("详见 "),n(l,{to:"/feature/meta.html"},{default:o(()=>[a("页面元数据")]),_:1}),a(" 章节。")]),Te,c(" TODO: Improve it "),Oe,e("p",null,[a("具体详情请见 "),n(l,{to:"/feature/comment.html"},{default:o(()=>[a("评论")]),_:1}),a(" 章节。")]),Pe,e("div",Ve,[Be,e("p",null,[a("如果你想使用你自己的布局，你可以在 "),e("a",Ne,[a("客户端配置文件中注册布局"),n(t)]),a("。")])]),Ie])}const Ze=d(h,[["render",He],["__file","page.html.vue"]]),Ae=JSON.parse('{"path":"/posts/page.html","title":"Hope Page Doc","lang":"zh-CN","frontmatter":{"title":"Hope Page Doc","category":["布局"],"tag":["布局","页面"],"description":" 图标支持 你可以在页面的 frontmatter 中配置 icon 字段，填入对应图标的 FontClass 即可绑定图标到页面。 该图标会在导航栏，侧边栏，路径导航和标题中使用。 例子 相关信息 图标的相关设置，详见 路径导航 详见 路径导航 章节。 文章信息展示 详见 文章信息 章节。 标题列表 在桌面模式下，文章的标题列表会自动显示在屏幕的右侧...","head":[["meta",{"property":"og:url","content":"http://bomian.github.io/posts/page.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"Hope Page Doc"}],["meta",{"property":"og:description","content":" 图标支持 你可以在页面的 frontmatter 中配置 icon 字段，填入对应图标的 FontClass 即可绑定图标到页面。 该图标会在导航栏，侧边栏，路径导航和标题中使用。 例子 相关信息 图标的相关设置，详见 路径导航 详见 路径导航 章节。 文章信息展示 详见 文章信息 章节。 标题列表 在桌面模式下，文章的标题列表会自动显示在屏幕的右侧..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-23T14:29:39.000Z"}],["meta",{"property":"article:tag","content":"布局"}],["meta",{"property":"article:tag","content":"页面"}],["meta",{"property":"article:modified_time","content":"2024-02-23T14:29:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hope Page Doc\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-23T14:29:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"图标支持","slug":"图标支持","link":"#图标支持","children":[]},{"level":2,"title":"路径导航","slug":"路径导航","link":"#路径导航","children":[]},{"level":2,"title":"文章信息展示","slug":"文章信息展示","link":"#文章信息展示","children":[]},{"level":2,"title":"标题列表","slug":"标题列表","link":"#标题列表","children":[{"level":3,"title":"设置标题深度","slug":"设置标题深度","link":"#设置标题深度","children":[]},{"level":3,"title":"贡献者与最后更新时间","slug":"贡献者与最后更新时间","link":"#贡献者与最后更新时间","children":[{"level":4,"title":"上 / 下一篇链接","slug":"上-下一篇链接","link":"#上-下一篇链接","children":[]}]}]},{"level":2,"title":"评论","slug":"评论","link":"#评论","children":[]},{"level":2,"title":"自定义布局","slug":"自定义布局","link":"#自定义布局","children":[]},{"level":2,"title":"自定义容器 Class","slug":"自定义容器-class","link":"#自定义容器-class","children":[]},{"level":2,"title":"路径导航","slug":"路径导航-1","link":"#路径导航-1","children":[]},{"level":2,"title":"文章信息展示","slug":"文章信息展示-1","link":"#文章信息展示-1","children":[]},{"level":2,"title":"标题列表","slug":"标题列表-1","link":"#标题列表-1","children":[{"level":3,"title":"设置标题深度","slug":"设置标题深度-1","link":"#设置标题深度-1","children":[]},{"level":3,"title":"贡献者与最后更新时间","slug":"贡献者与最后更新时间-1","link":"#贡献者与最后更新时间-1","children":[{"level":4,"title":"上 / 下一篇链接","slug":"上-下一篇链接-1","link":"#上-下一篇链接-1","children":[]}]}]},{"level":2,"title":"评论","slug":"评论-1","link":"#评论-1","children":[]},{"level":2,"title":"自定义布局","slug":"自定义布局-1","link":"#自定义布局-1","children":[]},{"level":2,"title":"自定义容器 Class","slug":"自定义容器-class-1","link":"#自定义容器-class-1","children":[]},{"level":2,"title":"路径导航","slug":"路径导航-2","link":"#路径导航-2","children":[]},{"level":2,"title":"文章信息展示","slug":"文章信息展示-2","link":"#文章信息展示-2","children":[]},{"level":2,"title":"标题列表","slug":"标题列表-2","link":"#标题列表-2","children":[{"level":3,"title":"设置标题深度","slug":"设置标题深度-2","link":"#设置标题深度-2","children":[]},{"level":3,"title":"贡献者与最后更新时间","slug":"贡献者与最后更新时间-2","link":"#贡献者与最后更新时间-2","children":[{"level":4,"title":"上 / 下一篇链接","slug":"上-下一篇链接-2","link":"#上-下一篇链接-2","children":[]}]}]},{"level":2,"title":"评论","slug":"评论-2","link":"#评论-2","children":[]},{"level":2,"title":"自定义布局","slug":"自定义布局-2","link":"#自定义布局-2","children":[]},{"level":2,"title":"自定义容器 Class","slug":"自定义容器-class-2","link":"#自定义容器-class-2","children":[]},{"level":2,"title":"路径导航","slug":"路径导航-3","link":"#路径导航-3","children":[]},{"level":2,"title":"文章信息展示","slug":"文章信息展示-3","link":"#文章信息展示-3","children":[]},{"level":2,"title":"标题列表","slug":"标题列表-3","link":"#标题列表-3","children":[{"level":3,"title":"设置标题深度","slug":"设置标题深度-3","link":"#设置标题深度-3","children":[]},{"level":3,"title":"贡献者与最后更新时间","slug":"贡献者与最后更新时间-3","link":"#贡献者与最后更新时间-3","children":[{"level":4,"title":"上 / 下一篇链接","slug":"上-下一篇链接-3","link":"#上-下一篇链接-3","children":[]}]}]},{"level":2,"title":"评论","slug":"评论-3","link":"#评论-3","children":[]},{"level":2,"title":"自定义布局","slug":"自定义布局-3","link":"#自定义布局-3","children":[]},{"level":2,"title":"自定义容器 Class","slug":"自定义容器-class-3","link":"#自定义容器-class-3","children":[]},{"level":2,"title":"路径导航","slug":"路径导航-4","link":"#路径导航-4","children":[]},{"level":2,"title":"文章信息展示","slug":"文章信息展示-4","link":"#文章信息展示-4","children":[]},{"level":2,"title":"标题列表","slug":"标题列表-4","link":"#标题列表-4","children":[{"level":3,"title":"设置标题深度","slug":"设置标题深度-4","link":"#设置标题深度-4","children":[]},{"level":3,"title":"贡献者与最后更新时间","slug":"贡献者与最后更新时间-4","link":"#贡献者与最后更新时间-4","children":[{"level":4,"title":"上 / 下一篇链接","slug":"上-下一篇链接-4","link":"#上-下一篇链接-4","children":[]}]}]},{"level":2,"title":"评论","slug":"评论-4","link":"#评论-4","children":[]},{"level":2,"title":"自定义布局","slug":"自定义布局-4","link":"#自定义布局-4","children":[]},{"level":2,"title":"自定义容器 Class","slug":"自定义容器-class-4","link":"#自定义容器-class-4","children":[]}],"git":{"createdTime":1708696960000,"updatedTime":1708698579000,"contributors":[{"name":"wsczh","email":"1998wsc@gmail.com","commits":2}]},"readingTime":{"minutes":10.2,"words":3060},"filePathRelative":"posts/page.md","localizedDate":"2024年2月23日","excerpt":"","autoDesc":true}');export{Ze as comp,Ae as data};
